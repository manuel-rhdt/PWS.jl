---
title: Cooperativity in Chemotaxis
author: Manuel Reinhardt
date: 2021-03-24
---

# Chemotaxis Network

```julia; echo = false; results = "hidden"
import PWS
using PWS: TrajectoryCallback, Trajectory, SMCEstimate, DirectMCEstimate, marginal_configuration, MarginalEnsemble, ConditionalEnsemble, gene_expression_system, generate_configuration, logpdf, cooperative_chemotaxis_system, reaction_network
using StaticArrays
import Catalyst
using DiffEqBase
using DiffEqJump
import ModelingToolkit
using Plots
```

We setup our parameters
```julia
lmax = 1
mmax = 3
K_a = 500 # unit: μM
K_i = 25  # unit: μM
δg = log(K_a/K_i) # ≈ 3

E0 = 2.0
δf = -1.0

n_clusters = 800

p_bind = 0.05

γ = 1/0.5 # 1 / (adaptation time scale)
γ_B = γ / (mmax * abs(δf))
γ_R = γ_B / 2

params = [
    E0,
    0.1, # in/activation timescale
    δg,
    δf,
    p_bind, # ligand binding to active receptor
    p_bind, # ligand binding to inactive receptor
    p_bind * K_a, # ligand dissociation from active receptor
    p_bind * K_i, # ligand dissociation from inactive receptor
    γ_B, # demethylation of active receptor
    γ_R  # methylation of inactive receptor
]
```
Here `lmax` speciefies the maximum number of ligands that can bind to a receptor cluster and `mmax` the number of methylation sites for the receptor cluster.

The ligand binding dynamics are governed by the parameters `K_a` and `K_i` which represent the dissociation constants for the binding of ligand to an active or inactive receptor, respectively. The molecular binding of ligand to a receptor is assumed to be diffusion-limited and therefore the rate of binding events is independent of the conformational state of the receptor. For a given ligand concentration $[\mathrm{L}]$ we assume a binding rate of $k^\text{bind} = 0{.}05 [\mathrm{L}]$ and dissociation rates $k^\text{dis}_a = 0{.}05 K_a$ and $p^\text{dis}_i = 0{.}05 K_i$ for active and inactive receptors, respectively.

The probability for a receptor cluster being in the active state is
```math
\begin{equation}
p_a(\ell, m) = \frac{1}{1 + e^{\beta \Delta\mathrm{F}(\ell, m)}}
\end{equation}
```
where the free energy difference between the active and inactive conformations of a receptor cluster is given by
```math
\begin{equation}
\Delta\mathrm{F}(\ell, m) = E_0 + \ell \delta g + m \delta f \,.
\end{equation}
```

Now we setup the system and the test trajectory which is just a step function
```julia
system = cooperative_chemotaxis_system(lmax=lmax, mmax=mmax, n_clusters=n_clusters)
step_s = Trajectory([0, 100, 200, 300], [[0], [0], [5], [0]])
plot(step_s, ylim=(0,10))
```

Set up and solve the system

```julia; echo = false; results = "hidden"
function solve_system(system, s_traj, pr=system.pr)
    rx = merge(system.rn, system.xn)

    u0 = copy(system.u0)
    u0[1] = s_traj.u[1][1]
    dprob = DiscreteProblem(rx, u0, (0.0, 300.0), vcat(pr, system.px))
    jprob = JumpProblem(rx, dprob, Direct(), save_positions=(false, false))

    cb = TrajectoryCallback(s_traj)
    cb = DiscreteCallback(cb, cb)

    sol = solve(jprob, SSAStepper(), callback=cb, tstops=s_traj.t, saveat=1.0)
end

getname(sym) = String(ModelingToolkit.operation(sym).name)

function parse_receptor(species)
    sname = getname(species)
    mtch = match(r"([A-Z])_(\d+)_(\d+)", sname)
    if mtch !== nothing
        # a = mtch.captures[1] == "A"
        l = parse(Int, mtch.captures[2])
        m = parse(Int, mtch.captures[3])
        # (a, l, m) => index
        (l, m)
    else
        nothing
    end
end

using Transducers
function receptor_states(rs)
    smap = Catalyst.speciesmap(rs)
    xf = KeepSomething() do (species, index) 
        result = parse_receptor(species)
        if result === nothing
            nothing
        else
            result => index
        end
    end
    smap |> xf
end

function bound_ligands(sol, rs)
    rstates = receptor_states(rs)
    rstates |> Map(((l, m), i)::Pair -> l .* sol[i,:]) |> sum
end

function bound_methyl(sol, rs)
    rstates = receptor_states(rs)
    rstates |> Map(((l, m), i)::Pair -> m .* sol[i,:]) |> sum
end

p_active(l, m) = 1 / (1 + exp(E0 + l*δg + m*δf))

function active_receptors(sol, rs)
    rstates = receptor_states(rs)
    rstates |> Map(((l, m), i)::Pair -> p_active(l, m) .* sol[i,:]) |> sum
end

function inactive_receptors(sol, rs)
    rstates = receptor_states(rs)
    rstates |> Map(((l, m), i)::Pair -> (1-p_active(l, m)) .* sol[i,:]) |> sum
end

function plot_solution(sol, system)
    joint = reaction_network(system)
    t = sol.t
    p = plot(t, vec(sol[1,:]) ./ 10, label="ligand concentration")
    plot!(p, t, active_receptors(sol, joint) ./ n_clusters, label="active fraction")
    plot!(p, t, vec(sol[end-1,:]) ./ 10000, label="Yp / (Y+Yp)")
    plot!(p, t, bound_ligands(sol, joint) ./ (lmax * n_clusters), label="bound receptor fraction")
    plot!(p, t, bound_methyl(sol, joint) ./ (mmax * n_clusters), label="methylated fraction", legend=:topleft)
end
```

```julia; cache=true
sol = solve_system(system, step_s, params)
plot_solution(sol, system)
```

For completeness, I now show all reactions with their corresponding rates.

```julia; echo=false
using Printf

println("R_l_k: Receptor with l bound ligands and k-times methylated")
for r in Catalyst.reactions(system.rn)
    f = ModelingToolkit.build_function(r.rate, Catalyst.params(system.rn), expression=Val{false})
    l, m = parse_receptor(r.substrates[1])
    @printf "%s --> %s ; k = %5.2f ; p_active = %.3f\n" getname(r.substrates[1]) getname(r.products[1]) f(params) p_active(l, m)
end
```

## Disabling Ligand binding

What happens if we set all reaction rates corresponding to ligand binding to 0? The average methylation dynamics for a $N$ receptor clusters follow the mean field equation
```math
\begin{equation}
\frac{\mathrm{d}m(t)}{\mathrm{d} t} = γ_R\, N[1 - a(t)] - γ_B\, Na(t) \,.
\end{equation}
```
the active fraction $a(t) = p(\ell, m(t))$ also obeys a similar mean field equation
```math
\begin{equation}
\frac{\mathrm{d}a(t)}{\mathrm{d} t} = \frac{\mathrm{d}a}{\mathrm{d} m}\frac{\mathrm{d}m(t)}{\mathrm{d} t}
\end{equation}
```
where
```math
\begin{equation}
\frac{\mathrm{d}a}{\mathrm{d} m} =  - a^2(t) \left(\frac{1}{a(t)} - 1\right) δf \,.
\end{equation}
```
So overall we can write
```math
\begin{equation}
\frac{\mathrm{d}a}{\mathrm{d} t} =  - a(t) \left[1 - a(t)\right] δf
N \left[γ_R\, [1 - a(t)] - γ_B\, a(t)\right]
\end{equation}
```
with the equilibrium activity satisfying
```math
\begin{equation}
γ_R\, [1 - a^\star] = γ_B\, a^\star
\end{equation}
```
such that $a^\star = γ_R / (γ_R + γ_B)$. For our parameters, the value of $a^\star$ is
```julia 
a_star = γ_R / (γ_R + γ_B)
```

Plot

```julia; cache=true
params = [
    E0,
    0.2, # in/activation timescale
    δg,
    δf,
    0.0, # ligand binding to active receptor
    0.0, # ligand binding to inactive receptor
    0.0, # ligand dissociation from active receptor
    0.0, # ligand dissociation from inactive receptor
    γ_B, # demethylation of active receptor
    γ_R  # methylation of inactive receptor
]

sol = solve_system(system, step_s, params)
plot_solution(sol, system)
plot!([a_star], seriestype=:hline, label="mean field activity")
```
